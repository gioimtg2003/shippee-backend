openapi: 3.0.0
paths:
  /api/admin/me:
    get:
      operationId: AdminController_meProfile
      parameters: []
      responses:
        '200':
          description: Successful get admin profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMeDTO'
      summary: Get admin profile
      tags:
        - Admin
  /api/driver-manage/driver:
    post:
      operationId: DriverManageController_createDriver
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDriverInput'
      responses:
        '201':
          description: Driver created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreateDriverDTO'
      summary: Create a driver
      tags: &ref_0
        - driver-manage
    get:
      operationId: DriverManageController_getAllDriver
      parameters: []
      responses:
        '200':
          description: Get all driver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetAllDriverDTO'
      summary: Get all driver
      tags: *ref_0
  /api/auth-admin/login:
    post:
      operationId: AuthAdminController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginInput'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '400':
          description: Bad request
      summary: Admin user login
      tags:
        - auth-admin
  /api/user-auth/login:
    post:
      operationId: UserAuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLoginInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
        '401':
          description: Unauthorized
      summary: Customer login
      tags: &ref_1
        - user-auth
  /api/user-auth/refresh-token:
    get:
      operationId: UserAuthController_refreshToken
      parameters: []
      responses:
        '200':
          description: Successful refresh token
        '401':
          description: Unauthorized
      summary: Refresh token
      tags: *ref_1
info:
  title: Shipppee system API
  description: The Shipppee system API description
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    Data:
      type: object
      properties:
        name:
          type: string
          description: Admin name
          example: Nguyen Cong Gioi
        username:
          type: string
          description: Admin username
          example: admin
        id:
          type: number
          description: Admin user ID
          example: '12'
      required:
        - id
    ResponseMeDTO:
      type: object
      properties:
        code:
          type: number
          example: 200
          description: status code
        success:
          type: boolean
          example: true
          description: status
        message:
          type: string
          example: success
          description: message
        timestamp:
          type: string
          example: '2021-09-01T14:00:00.000Z'
          description: timestamp
        data:
          example:
            id: 1
            name: Cong Gioi
            username: conggioi
          description: Data
          allOf:
            - $ref: '#/components/schemas/Data'
      required:
        - code
        - success
        - message
        - timestamp
        - data
    CreateDriverInput:
      type: object
      properties:
        name:
          type: string
          description: Driver name
          example: Cong Gioi
        email:
          type: string
          description: Driver email
          example: conggioi.pro264@gmail.com
        password:
          type: string
          description: Driver password
          example: '123456'
        phone:
          type: string
          description: Driver phone number
          example: '0123456789'
        transportTypeId:
          type: number
          description: Transport type ID
          example: '1'
      required:
        - name
        - email
        - password
        - phone
        - transportTypeId
    ResponseCreateDriverDTO:
      type: object
      properties:
        code:
          type: number
          example: 200
          description: status code
        success:
          type: boolean
          example: true
          description: status
        message:
          type: string
          example: success
          description: message
        timestamp:
          type: string
          example: '2021-09-01T14:00:00.000Z'
          description: timestamp
        data:
          type: boolean
          example: true
      required:
        - code
        - success
        - message
        - timestamp
        - data
    ResponseGetAllDriverDTO:
      type: object
      properties:
        code:
          type: number
          example: 200
          description: status code
        success:
          type: boolean
          example: true
          description: status
        message:
          type: string
          example: success
          description: message
        timestamp:
          type: string
          example: '2021-09-01T14:00:00.000Z'
          description: timestamp
        data:
          example:
            - id: 1
              createdAt: '2024-11-19T15:24:48.465Z'
              name: Cong Gioi
              email: conggioi.pro264@gmail.com
              phone: '0367039394  '
              isIdentityVerified: false
            - id: 4
              createdAt: '2024-11-19T15:25:18.054Z'
              name: Cong Gioi
              email: conggioi.pro64@gmail.com
              phone: '0367014394  '
              isIdentityVerified: false
          type: array
          items:
            type: string
      required:
        - code
        - success
        - message
        - timestamp
        - data
    AdminLoginInput:
      type: object
      properties:
        username:
          type: string
          description: Admin username
          example: admin
        password:
          type: string
          description: Admin password
          example: '123456'
      required:
        - username
        - password
    LoginResponseDto:
      type: object
      properties:
        code:
          type: number
          example: 200
          description: status code
        success:
          type: boolean
          example: true
          description: status
        message:
          type: string
          example: success
          description: message
        timestamp:
          type: string
          example: '2021-09-01T14:00:00.000Z'
          description: timestamp
        data:
          description: Response data
          allOf:
            - $ref: '#/components/schemas/Data'
      required:
        - code
        - success
        - message
        - timestamp
        - data
    CustomerLoginInput:
      type: object
      properties:
        email:
          type: string
          example: conggioi@gmail.com
        password:
          type: string
          example: '********'
      required:
        - email
        - password
    UserSession:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - CUSTOMER
            - DRIVER
            - ADMIN
            - SUPER_ADMIN
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - id
        - name
        - email
        - role
        - accessToken
        - refreshToken
